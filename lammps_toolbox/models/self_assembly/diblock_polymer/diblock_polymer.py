import math

NPoly = 10  # degree of polymerization
b = 0.85  # bond length
L = 30.0

block_ratio=0.4

Polymers = []
Bonds = []

natoms = 0
nbonds = 0
nangles = 0

atomtype = 2  # types of atom
bondtype = 3  # types of bonds
angletype = 0  # types of angles

mass = 1.00

for n in range(NPoly):
    Polymer = {}
    Polymer['id'] = natoms + 1
    Polymer['mole'] = 1
    Polymer['type'] = 1
    if n > int(block_ratio * NPoly)-1:
        Polymer['type'] = 2
    Polymer['x'] =n*b
    Polymer['y'] = 1.0
    Polymer['z'] = 1.0
    natoms += 1
    Polymers.append(Polymer)

for n in range(natoms-1):
    Bond = {}
    nbonds += 1
    Bond['id'] = nbonds
    Bond['type'] = 1
    if Polymers[n]['type']==1 and Polymers[n+1]['type']==2:
        Bond['type'] = 3
    if Polymers[n]['type']==2 and Polymers[n+1]['type']==2:
        Bond['type'] = 2
    Bond['n1'] = Polymers[n]['id']
    Bond['n2'] = Polymers[n + 1]['id']
    Bonds.append(Bond)
del Bond

with open('diblock_polymers.data', 'w') as f:
    f.write("LAMMPS data file. CGCMM style. atom_style full generated by wangyu\n")
    f.write('\n')

    f.write(str(natoms) + ' atoms\n')
    f.write(str(atomtype) + ' atom types' + '\n')
    f.write(str(nbonds) + ' bonds\n')
    f.write(str(bondtype) + ' bond types' + '\n')
    f.write(str(nangles) + ' angles\n')
    f.write(str(angletype) + ' angle types' + '\n')
    f.write('\n')

    f.write(str(-L) + ' ' + str(L) + ' ' + 'xlo xhi\n')
    f.write(str(-L) + ' ' + str(L) + ' ' + 'ylo yhi\n')
    f.write(str(-L) + ' ' + str(L) + ' ' + 'zlo zhi\n')
    f.write('\n')

    f.write('Masses\n')
    f.write('\n')
    for n in range(atomtype):
        f.write(str(n + 1) + ' ' + str(mass) + '\n')
    f.write('\n')

    f.write('Atoms # molecular\n')
    f.write('\n')
    for Atom in Polymers:
        f.write(str(Atom['id']) + ' ' + str(Atom['mole']) + ' ' + str(Atom['type']) + ' ' + str(Atom['x']) + ' ' + str(
            Atom['y']) + ' ' + str(Atom['z']) + '\n')
    f.write('\n')

    f.write('Bonds\n')
    f.write('\n')
    for Bond in Bonds:
        f.write(str(Bond['id'])+' '+str(Bond['type'])+' '+str(Bond['n1'])+' '+str(Bond['n2'])+'\n')
    f.write('\n')
