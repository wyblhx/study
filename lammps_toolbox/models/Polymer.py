'''
This code generates the lammps data file of polymers
Author: Wangyu
Date: 17 Nov 2020.
'''

import random
import math

NPoly = 200  # degree of polymerization
b = 1.122  # bond length
L = 30.0

Polymers = []
Bonds = []
Angles = []

natoms = 0
nbonds = 0
nangles = 0

atomtype = 1  # types of atom
bondtype = 1  # types of bonds
angletype = 1  # types of angles

mass = 1.00

while True:
    if len(Polymers) >= NPoly:
        break

    Polymer = {}
    # initialization
    if len(Polymers) == 0:
        Polymer['id'] = natoms + 1
        Polymer['mole'] = 1
        Polymer['type'] = 1
        Polymer['x'] = 0.0
        Polymer['y'] = 0.0
        Polymer['z'] = 0.0
        Polymers.append(Polymer)
        natoms += 1
        continue
    theta = random.uniform(0, math.pi)
    phi = random.uniform(0, 2 * math.pi)

    Polymer['id'] = natoms + 1
    Polymer['mole'] = 1
    Polymer['type'] = 1
    Polymer['x'] = Polymers[-1]['x'] + b * math.sin(theta) * math.cos(phi)
    Polymer['y'] = Polymers[-1]['y'] + b * math.sin(theta) * math.sin(phi)
    Polymer['z'] = Polymers[-1]['z'] + b * math.cos(theta)
    if Polymer['x'] * Polymer['x'] + Polymer['y'] * Polymer['y'] + Polymer['z'] * Polymer['z'] > L * L:
        continue
    Polymers.append(Polymer)
    natoms += 1
    for n in range(len(Polymers) - 1):
        dx = Polymers[-1]['x'] - Polymers[n]['x']
        dy = Polymers[-1]['y'] - Polymers[n]['y']
        dz = Polymers[-1]['z'] - Polymers[n]['z']
        if dx * dx + dy * dy + dz * dz < 1.02 * b:
            del Polymers[-1]
            natoms -= 1
            break

del Polymer

for n in range(natoms-1):
    Bond = {}
    nbonds += 1
    Bond['id'] = nbonds
    Bond['type'] = 1
    Bond['n1'] = Polymers[n]['id']
    Bond['n2'] = Polymers[n + 1]['id']
    Bonds.append(Bond)
del Bond

for n in range(natoms - 2):
    Angle = {}
    nangles += 1
    Angle['id'] = nangles
    Angle['type'] = 1
    Angle['n1'] = Polymers[n]['id']
    Angle['n2'] = Polymers[n + 1]['id']
    Angle['n3'] = Polymers[n + 2]['id']
    Angles.append(Angle)
del Angle

with open('polymers.data', 'w') as f:
    f.write("LAMMPS data file. CGCMM style. atom_style full generated by wangyu\n")
    f.write('\n')

    f.write(str(natoms) + ' atoms\n')
    f.write(str(atomtype) + ' atom types' + '\n')
    f.write(str(nbonds) + ' bonds\n')
    f.write(str(bondtype) + ' bond types' + '\n')
    f.write(str(nangles) + ' angles\n')
    f.write(str(angletype) + ' angle types' + '\n')
    f.write('\n')

    f.write(str(-L) + ' ' + str(L) + ' ' + 'xlo xhi\n')
    f.write(str(-L) + ' ' + str(L) + ' ' + 'ylo yhi\n')
    f.write(str(-L) + ' ' + str(L) + ' ' + 'zlo zhi\n')
    f.write('\n')

    f.write('Masses\n')
    f.write('\n')
    for n in range(atomtype):
        f.write(str(n + 1) + ' ' + str(mass) + '\n')
    f.write('\n')

    f.write('Atoms # molecular\n')
    f.write('\n')
    for Atom in Polymers:
        f.write(str(Atom['id']) + ' ' + str(Atom['mole']) + ' ' + str(Atom['type']) + ' ' + str(Atom['x']) + ' ' + str(
            Atom['y']) + ' ' + str(Atom['z']) + '\n')
    f.write('\n')

    f.write('Bonds\n')
    f.write('\n')
    for Bond in Bonds:
        f.write(str(Bond['id'])+' '+str(Bond['type'])+' '+str(Bond['n1'])+' '+str(Bond['n2'])+'\n')
    f.write('\n')

    f.write('Angles\n')
    f.write('\n')
    for Angle in Angles:
        f.write(str(Angle['id'])+' '+str(Angle['type'])+' '+str(Angle['n1'])+' '+str(Angle['n2'])+' '+str(Angle['n3'])+'\n')

