匿名函数
Python使用lambda关键字创造匿名函数。所谓匿名，意即不再使用def语句这样标准的形式定义一个函数。

1.why to use it
开发过程中，为了简化函数的定义部分

2.how to
格式：函数名=lambda 参数1,参数2,... : 运算

例子：匿名函数实现求和
s=lambda a,b : a+b #a,b指代参数，a+b指代返回值部分
#调用
s(1,2)

1）匿名函数作为参数
def func(x,y,func):
    print(x,y)
    s=func(x,y)
    print(s)

 #调用
 func(1,2,lambda a,b :a+b)

 2.匿名函数和内置函数的联合应用
list1=[{'id':1,'type':1},{'id':3,'type':1},{'id':2,'type':1}]

m=max(list1,key=lambda x:x['id'])

print(m)

3.判断
func=lambda x:x if x%2==0 else x+1 #判断数字是否为偶数，偶数不变，奇数+1

'''遍历列表，奇数+1，偶数不变'''
#map() 对列表元素进行操作
list1=[1,3,5,7,9,10,11]
resulit=map(lambda x:x if x%2==0 else x+1,list1)
print(result)

4.reduce() 对列表(可迭代的容器)中的元素进行加/减/乘/除操作
from functools import reduce
定义 def reduce(function,seque，initial=None)

5.filter() #筛选
lsit1=[1,11,2,12,3,13]
result=filter(lambda x: x if x>10,lsit1)#筛选出列表中大于10的元素
print(lsit(result))

按照年龄大小排序
students=sorted(students,key=lambda x:x['age'])
prints(students)