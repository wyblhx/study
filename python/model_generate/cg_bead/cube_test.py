# # -*- coding: utf-8 -*-

'''
主要用来产生正方体形式的粗粒化珠子，珠子直径1.0
'''
a = 5  # length
mass = 1.0
dis = 0.5
natom = 0  # atoms_number
natomtype = 1
nbond = 0
nbondtype = 1


def cube():
    global natom
    cube = []
    for i in range(a):
        for j in range(a):
            for k in range(a):
                atom = {}  # 保存坐标信息,形式：id,type,x,y,z
                atom['id'] = natom + 1
                atom['type'] = 1
                atom['x'] = k * dis
                atom['y'] = j * dis
                atom['z'] = i * dis
                cube.append(atom)
                natom += 1
    return cube


def cube_bond(cube):
    global nbond
    cube_bond = []
    for n1 in range(natom - 1):
        for n2 in range(n1, natom):
            bond = {}
            dx = cube[n2]['x'] - cube[n1]['x']
            dy = cube[n2]['y'] - cube[n1]['y']
            dz = cube[n2]['z'] - cube[n1]['z']
            r = dx * dx + dy * dy + dz * dz
            if r == dis * dis:
                bond['id'] = nbond + 1
                bond['type'] = 1
                bond['n1'] = cube[n1]['id']
                bond['n2'] = cube[n2]['id']
                cube_bond.append(bond)
                nbond += 1
    return cube_bond

cube=cube()
cube_bond=cube_bond(cube)

# print(cube_bond)

with open('cube.data', 'w') as f:
    f.write("LAMMPS data file. CGCMM style. atom_style full generated by wangyu\n")
    f.write('\n')

    f.write(str(natom) + ' atoms\n')
    f.write(str(natomtype) + ' atom types' + '\n')
    f.write(str(nbond) + ' bonds\n')
    f.write(str(nbondtype) + ' bond types' + '\n')
    f.write('\n')

    f.write('0.0' + ' ' + str(dis * a) + ' ' + 'xlo xhi\n')
    f.write('0.0' + ' ' + str(dis * a) + ' ' + 'ylo yhi\n')
    f.write('0.0' + ' ' + str(dis * a) + ' ' + 'zlo zhi\n')
    f.write('\n')

    f.write('Masses\n')
    f.write('\n')
    for n in range(natomtype):
        f.write(str(n + 1) + ' ' + str(mass) + '\n')
    f.write('\n')

    f.write('Atoms # atomic\n')
    f.write('\n')
    for n in range(natom):
        f.write(str(cube[n]['id']) + ' ' + str(cube[n]['type']) + ' ' + str(cube[n]['x']) + ' ' + str(
            cube[n]['y']) + ' ' + str(cube[n]['z']) + '\n')
